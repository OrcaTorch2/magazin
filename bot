from telegram.ext import Updater, CommandHandler, MessageHandler, Filters

# Замените 'YOUR_TELEGRAM_BOT_TOKEN' на токен вашего Telegram-бота
BOT_TOKEN = 'YOUR_TELEGRAM_BOT_TOKEN'

# Пример списка товаров
products = [
    {
        'id': 1,
        'name': 'Товар 1',
        'price': 10.99
    },
    {
        'id': 2,
        'name': 'Товар 2',
        'price': 19.99
    },
    {
        'id': 3,
        'name': 'Товар 3',
        'price': 5.99
    }
]

def start(update, context):
    context.bot.send_message(chat_id=update.effective_chat.id, text="Привет! Я бот-магазин. Введите /products, чтобы посмотреть список товаров.")

def show_products(update, context):
    product_list = "\n".join([f"{product['id']}. {product['name']} - {product['price']} $" for product in products])
    context.bot.send_message(chat_id=update.effective_chat.id, text=f"Список товаров:\n\n{product_list}")

def buy_product(update, context):
    try:
        product_id = int(update.message.text.split()[1])
        product = next((p for p in products if p['id'] == product_id), None)
        if product:
            # Здесь можно добавить логику для обработки покупки товара
            context.bot.send_message(chat_id=update.effective_chat.id, text=f"Вы успешно купили товар '{product['name']}' за {product['price']} $")
        else:
            context.bot.send_message(chat_id=update.effective_chat.id, text="Товар с указанным ID не найден.")
    except (ValueError, IndexError):
        context.bot.send_message(chat_id=update.effective_chat.id, text="Неверный формат команды. Используйте /buy <ID товара>.")

updater = Updater(token=BOT_TOKEN, use_context=True)
dispatcher = updater.dispatcher

start_handler = CommandHandler('start', start)
products_handler = CommandHandler('products', show_products)
buy_handler = CommandHandler('buy', buy_product)

dispatcher.add_handler(start_handler)
dispatcher.add_handler(products_handler)
dispatcher.add_handler(buy_handler)

updater.start_polling()
